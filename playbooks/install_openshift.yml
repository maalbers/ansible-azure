---
## copy the ansible templated file (this is step 2 )
#################################################
 #### This may not be needed but its preparing the njumphost/master
################################################
- hosts: azure_vms
  gather_facts: False
  vars:
    publicjumpdns: "{{ hostvars['localhost']['publicjumpdns']}}"
    publicjumpip: "{{ hostvars['localhost']['publicjumpip']}}"
    routerpublicip: "{{ hostvars['localhost']['routerpublicip']}}"

  user: "{{ adminUsername }}"
  sudo: true
  roles:
     - { role: prepare_single_avail }
  tasks:
     - lineinfile:
         dest: /etc/ansible/ansible.cfg
         regexp: "^#log_path"
         line: "log_path = /tmp/ansible.log"

################################################
 #### Installing openshift
################################################
- hosts: azure_vms
  gather_facts: False
  user: "{{ adminUsername }}"
 # sudo: true
  force_handlers: yes
  vars:
    publicjumpdns: "{{ hostvars['localhost']['publicjumpdns']}}"
    publicjumpip: "{{ hostvars['localhost']['publicjumpip']}}"
    ansible_ssh_common_args: -o ProxyCommand="ssh -W %h:%p -q {{ adminUsername }}@{{ publicjumpip }}"
  tags:
    - installopenshift
  tasks:
  - debug: msg="Beginning openshift install. This can take some time. Do not cancel this step"
  - debug: msg="To following the progress of the install, You can login using your user {{ adminUsername }}@{{ publicjumpip }} and tail the log file /tmp/ansible.logi"
  - debug: msg="After installation, the router, registry, metrics and logging are installed"

  - command: rm /tmp/ansible.log
    ignore_errors: yes
  - name: install openshift
    async: 7200
    ignore_errors: yes
    #notify: Get Ansible log files
    shell: "ansible-playbook --become-method=sudo --become /usr/share/ansible/openshift-ansible/playbooks/byo/config.yml  "
    #shell: "echo hello"
    args:
      chdir: /home/{{ adminUsername }}
  - name: "Checking output of ansible log"
#    command: curl  --insecure --silent https://{{ publicjumpdns }}:443/healthz/ready
    command: grep 'PLAY RECAP' /tmp/ansible.log
    register: result_file
    until: result_file.stdout.find("PLAY RECAP") != -1
    retries: 400
    delay: 30
  - name: "Checking loadbalancer api"
    command: curl  --insecure --silent https://{{ publicjumpdns }}:443/healthz/ready
    register: resultapi
    until: resultapi.stdout.find("ok") != -1
    retries: 10
    delay: 3


- hosts: gatewayed-masters:gatewayed-nodes
  name: "Restart network service on nodes and masters"
  gather_facts: False
  user: "{{ adminUsername }}"
  sudo: true
  vars:
    publicjumpdns: "{{ hostvars['localhost']['publicjumpdns']}}"
    publicjumpip: "{{ hostvars['localhost']['publicjumpip']}}"
    ansible_ssh_common_args: -o ProxyCommand="ssh -W %h:%p -q {{ adminUsername }}@{{ publicjumpip }}"
  tasks:
    - debug: msg="Restarting network, this is because cluster hostname resolution does not work. This effect the mounting of the nfs shares for registry, ES and cassandra"
  #  - service: name=NetworkManager state=restarted
    - service: name=network state=restarted
#    - command: "echo hello"

- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - debug: msg="Waiting a min and a half, to ensure ports are all up on nodes"
    - command: "sleep 10"
      name: sleeping, zzz, zzz, zzz,
- hosts: gatewayed-masters[0]
  name: postinstall
  user: "{{ adminUsername }}"
  sudo: true
  tags:
    - postinstall
  vars:
    publicjumpdns: "{{ hostvars['localhost']['publicjumpdns']}}"
    publicjumpip: "{{ hostvars['localhost']['publicjumpip']}}"
    ansible_ssh_common_args: -o ProxyCommand="ssh -W %h:%p -q {{ adminUsername }}@{{ publicjumpip }}"
    routerpublicip: "{{ hostvars['localhost']['routerpublicip']}}"
  tasks:
    - command: "oc deploy docker-registry --cancel -n default"
      name: "Cancel docker-registry deploy"
      ignore_errors: true
    - command: "oc deploy docker-registry --latest -n default"
      name: "Docker-registry deploy"
      ignore_errors: true
