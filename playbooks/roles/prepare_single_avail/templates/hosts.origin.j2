[OSEv3:children]
masters
nodes
nfs
{% if masters | length  > 1  %}
etcd
{% endif %}
[OSEv3:vars]
# SSH user, this user should allow ssh based auth without requiring a password
ansible_ssh_user={{ adminUsername }}
openshift_release=1.4.1
# If ansible_ssh_user is not root, ansible_sudo must be set to true
ansible_become=yes
os_sdn_network_plugin_name='redhat/openshift-ovs-multitenant'
#deployment_type=openshift-enterprise
deployment_type=origin
#openshift_image_tag=v1.4.0-rc1
#containerized=true
osm_default_subdomain={{ routerpublicip }}.xip.io
openshift_master_default_subdomain={{ routerpublicip }}.xip.io
# uncomment the following to enable htpasswd authentication; defaults to DenyAllPasswordIdentityProvider
openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login': 'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider', 'filename': '/etc/origin/master/htpasswd'}]
openshift_master_htpasswd_users={'ivan':'$apr1$mmH6F3HC$wFVQmONOvOswQL.Ev821o.', 'user1': '$apr1$uml9xP6B$6cuH4KGOwVWJ4S1Ipl.gg.', 'user2': '$apr1$uml9xP6B$6cuH4KGOwVWJ4S1Ipl.gg.' }
os_sdn_network_plugin_name='redhat/openshift-ovs-multitenant'
#openshift_node_kubelet_args={'max-pods': ['40'], 'image-gc-high-threshold': ['90'], 'image-gc-low-threshold': ['80']}
openshift_node_kubelet_args={'maximum-dead-containers': ['100'], 'maximum-dead-containers-per-container': ['2'], 'minimum-container-ttl-duration': ['10s'], 'max-pods': ['110'], 'image-gc-high-threshold': ['90'], 'image-gc-low-threshold': ['80']}
#logrotate_scripts=[{"name": "syslog", "path": "/var/log/cron\n/var/log/maillog\n/var/log/messages\n/var/log/secure\n/var/log/spooler\n", "options": ["daily", "rotate 7", "compress", "sharedscripts", "missingok"], "scripts": {"postrotate": "/bin/kill -HUP `cat /var/run/syslogd.pid 2> /dev/null` 2> /dev/null || true"}}]
osm_default_node_selector="type=apps"
openshift_docker_options="--log-driver json-file --log-opt max-size=1M --log-opt max-file=3"
#i#openshift_router_selector='infra=true'
openshift_hosted_registry_selector='infra=true,infratype=registry'
openshift_node_iptables_sync_period=5s
#openshift_hosted_router_selector='infra=true'
openshift_master_pod_eviction_timeout=3m
osm_controller_args={'resource-quota-sync-period': ['10s']}
osm_api_server_args={'max-requests-inflight': ['400']}
#osm_cockpit_plugins=['cockpit-kubernetes']
osm_use_cockpit=false
openshift_use_dnsmasq=true
local_quota_per_fsgroup=256Mi
### ha stuff ####
openshift_master_cluster_method=native
openshift_master_cluster_hostname={{ publicjumpdns }}
openshift_master_cluster_public_hostname={{ publicjumpdns }}
openshift_master_api_port=443
openshift_master_console_port=443

###
### metrics
# Metrics deployment
# See: https://docs.openshift.com/enterprise/latest/install_config/cluster_metrics.html
#
# By default metrics are not automatically deployed, set this to enable them
openshift_hosted_metrics_deploy=false
#
# Storage Options
# If openshift_hosted_metrics_storage_kind is unset then metrics will be stored
# in an EmptyDir volume and will be deleted when the cassandra pod terminates.
# Storage options A & B currently support only one cassandra pod which is
# generally enough for up to 1000 pods. Additional volumes can be created
# manually after the fact and metrics scaled per the docs.
#
# Option A - NFS Host Group
# An NFS volume will be created with path "nfs_directory/volume_name"
# on the host within the [nfs] host group.  For example, the volume
# path using these options would be "/exports/metrics"
openshift_hosted_metrics_storage_kind=nfs
openshift_hosted_metrics_storage_access_modes=['ReadWriteOnce']
openshift_hosted_metrics_storage_nfs_directory=/exports
openshift_hosted_metrics_storage_nfs_options='*(rw,root_squash)'
openshift_hosted_metrics_storage_volume_name=metrics
openshift_hosted_metrics_storage_volume_size=10Gi


openshift_master_metrics_public_url="https://hawkular-metrics.{{ routerpublicip }}.xip.io/hawkular/metrics"

##### logging
# Logging deployment
#
# Currently logging deployment is disabled by default, enable it by setting this
openshift_hosted_logging_deploy=false
#
# Logging storage config
# Option A - NFS Host Group
# An NFS volume will be created with path "nfs_directory/volume_name"
# on the host within the [nfs] host group.  For example, the volume
# path using these options would be "/exports/logging"
openshift_hosted_logging_storage_kind=nfs
openshift_hosted_logging_storage_access_modes=['ReadWriteOnce']
openshift_hosted_logging_storage_nfs_directory=/exports
openshift_hosted_logging_storage_nfs_options='*(rw,root_squash)'
openshift_hosted_logging_storage_volume_name=logging
openshift_hosted_logging_storage_volume_size=10Gi
#

openshift_master_logging_public_url=https://logging.{{ routerpublicip }}.xip.io
openshift_hosted_logging_hostname="logging.{{ routerpublicip }}.xip.io"
#osm_cluster_network_cidr=172.29.210.0/24
# Configure number of bits to allocate to each hostb subnet e.g. 8
# would mean a /24 network on the host.
#osm_host_subnet_length=6
#openshift_master_portal_net=172.29.211.0/24

# Specify load balancer host


# External NFS Host
# NFS volume must already exist with path "nfs_directory/_volume_name" on
# the storage_host. For example, the remote volume path using these
# options would be "nfs.example.com:/exports/registry"
openshift_hosted_registry_storage_kind=nfs
openshift_hosted_registry_storage_access_modes=['ReadWriteMany']
openshift_hosted_registry_storage_host=jumphost1
openshift_hosted_registry_storage_nfs_directory=/exports
openshift_hosted_registry_storage_volume_name=registry
openshift_hosted_registry_storage_volume_size=20Gi

openshift_master_audit_config={"basicAuditEnabled": true}

openshift_router_selector='router=true'
openshift_registry_selector='registry=true'
[nfs]
jumphost1
#[etcd:vars]
#etcd_interface=eth1
# host group for masters
[masters]
{% for key, value in masters.iteritems() %}
{{ value.name }} openshift_hostname={{ value.name }}  openshift_public_hostname={{ value.name }}
{% endfor %}
{% if masters | length  > 1  %}
[etcd]
{% for key, value in masters.iteritems() %}
{{ value.name }} openshift_hostname={{ value.name }}  openshift_public_hostname={{ value.name }}
{% endfor %}
{% endif %}

##############################
## applications
# local_quota_per_fsgroup (quoata i)
# https://docs.openshift.com/enterprise/3.2/install_config/master_node_configuration.html
#  https://github.com/openshift/openshift-ansible/blob/eab842f5b6e5c04cda06c94cf8db3281d82c8ad6/roles/openshift_node/tasks/main.yml
############################
# host group for nodes, includes region info
[nodes]
{% if nodes is defined %}
{% for key, value in nodes.iteritems() %}
{{ value.name }} openshift_hostname={{ value.name }}  openshift_public_hostname={{ value.name }} openshift_node_labels="{ {% for key1, value1 in value.tags.iteritems() %}'{{ key1 }}': '{{ value1 }}' {% if not loop.last %}, {% endif %}{% endfor %} }"
{% endfor %}
{% endif %}

{% if masters is defined %}
{% for key, value in masters.iteritems() %}
{{ value.name }} openshift_hostname={{ value.name }}  openshift_public_hostname={{ value.name }}  openshift_node_labels="{ {% for key1, value1 in value.tags.iteritems() %}'{{ key1 }}': '{{ value1 }}' {% if not loop.last %}, {% endif %}{% endfor %} }"
{% endfor %}
{% endif %}

{% if infranodes is defined %}
{% for key, value in infranodes.iteritems() %}
{{ value.name }} openshift_hostname={{ value.name }}  openshift_public_hostname={{ value.name }}  openshift_node_labels="{ {% for key1, value1 in value.tags.iteritems() %}'{{ key1 }}': '{{ value1 }}' {% if not loop.last %}, {% endif %}{% endfor %} }"
{% endfor %}
{% endif %}

{% if storage is defined %}
{% for key, value in storage.iteritems() %}
{{ value.name }} openshift_hostname={{ value.name }}  openshift_public_hostname={{ value.name }}  openshift_node_labels="{ {% for key1, value1 in value.tags.iteritems() %}'{{ key1 }}': '{{ value1 }}' {% if not loop.last %}, {% endif %}{% endfor %} }"
{% endfor %}
{% endif %}
